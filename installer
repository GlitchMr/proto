#!perl6
use v6;

my %project_info =
    november => {
        installcmd  => 'git clone git://github.com/viklund/november.git',
        main_subdir => 'p6w',
    }
    # TODO: add druid
    # TODO: add perl6-examples
    # TODO: add web
;

given @*ARGS.shift {
    when undef       { exit; }
    when 'install'   { install(@*ARGS) }
    when 'upgrade'   { upgrade(@*ARGS) }
    when 'uninstall' { uninstall(@*ARGS) }
    default          { say "Unrecognized subcommand '$_'. See the README." }
}

sub install(*@projects) {
    unless @projects {
        say 'You have to specify what you want to install.';
        exit 1;
    }
    my $can_continue = True;
    for @projects -> $project {
        if !%project_info.exists($project) {
            say "Project not found: '$project'";
            $can_continue = False;
        }
    }
    if !$can_continue {
        say "Aborting...";
        exit(1);
    }
    for @projects -> $project {
        my %info = %project_info{$project};
        print "Downloading $project... ";
        run( %info<installcmd> ~ ' > download.log 2>&1' );
        say '';
        run( 'rm -f download.log' );
        # RAKUDO: Doesn't support any other way to change the current working
        #         directory. Improvising.
        my $cwd = %info.exists('main_subdir')
                  ?? "cd $project/{%info<main_subdir>}"
                  !! "cd $project";
        print "Building $project... ";
        run( "$cwd; yes '' | perl Makefile.PL > make.log 2>\&1" );
        run( "$cwd; make >> make.log 2>\&1" );
        say '';
        run( "$cwd; rm -f make.log" );
    }
}

sub upgrade(*@projects) {
    say "The 'upgrade' subcommand is not implemented yet.";
}

sub uninstall(*@projects) {
    say "The 'uninstall' subcommand is not implemented yet.";
}
